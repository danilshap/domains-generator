package mailboxes

import (
	"fmt"
	"github.com/danilshap/domains-generator/internal/models/view"
	"github.com/danilshap/domains-generator/internal/views/components/common"
)

templ List(data view.MailboxListData) {
	<div id="mailboxes-list">
		<div class="overflow-x-auto">
			<table class="w-full">
				<thead>
					<tr class="bg-gray-50">
						<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Email</th>
						<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Domain</th>
						<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Status</th>
					</tr>
				</thead>
				<tbody class="divide-y divide-gray-100">
					for _, mailbox := range data.Mailboxes {
						<tr class="group hover:bg-gray-50 transition-colors">
							<td class="whitespace-nowrap px-6 py-4">
								<div class="flex items-center">
									<div class="w-8 h-8 rounded-lg bg-indigo-50 flex items-center justify-center mr-3 group-hover:bg-indigo-100 transition-colors">
										<i class="fa-solid fa-envelope text-indigo-600"></i>
									</div>
									<div>
										<a
											href={ templ.SafeURL(fmt.Sprintf("/mailboxes/%d", mailbox.ID)) }
											class="text-sm font-medium text-gray-900 hover:text-indigo-600 transition-colors"
										>
											{ mailbox.Address }
										</a>
										<div class="text-xs text-gray-500">Added on { mailbox.CreatedAt.Format("Jan 02, 2006") }</div>
									</div>
								</div>
							</td>
							<td class="whitespace-nowrap px-6 py-4">
								<div class="inline-flex items-center px-2.5 py-1 rounded-md bg-gray-50 border border-gray-200">
									<span class="text-sm text-gray-700">{ mailbox.DomainName }</span>
								</div>
							</td>
							<td class="whitespace-nowrap px-6 py-4">
								@common.MailboxStatusBadge(mailbox.Status)
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		if data.TotalPages > 1 {
			<div class="px-6 py-4 border-t border-gray-100">
				<div class="flex items-center justify-between">
					<div class="text-sm text-gray-500">
						Page { fmt.Sprint(data.CurrentPage) } of { fmt.Sprint(data.TotalPages) }
					</div>
					<div class="flex items-center space-x-2">
						if data.CurrentPage > 1 {
							<button
								type="button"
								class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 rounded-lg border border-gray-200 transition-colors"
								hx-get={ fmt.Sprintf("/mailboxes?page=%d&domain_id=%d", data.CurrentPage-1, data.DomainID) }
								hx-target="#mailboxes-list"
							>
								<i class="fa-solid fa-chevron-left mr-1 text-xs"></i>
								Previous
							</button>
						}
						if data.CurrentPage < data.TotalPages {
							<button
								type="button"
								class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 rounded-lg border border-gray-200 transition-colors"
								hx-get={ fmt.Sprintf("/mailboxes?page=%d&domain_id=%d", data.CurrentPage+1, data.DomainID) }
								hx-target="#mailboxes-list"
							>
								Next
								<i class="fa-solid fa-chevron-right ml-1 text-xs"></i>
							</button>
						}
					</div>
				</div>
			</div>
		}
	</div>
}
