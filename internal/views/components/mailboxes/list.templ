package mailboxes

import (
	"fmt"
	db "github.com/danilshap/domains-generator/internal/db/sqlc"
	"github.com/danilshap/domains-generator/internal/views/components/common"
)

type ListData struct {
	Mailboxes   []db.GetMailboxesWithFiltersRow
	CurrentPage int32
	TotalPages  int32
	PageSize    int
	Stats       db.GetMailboxesStatsRow
	Filters     struct {
		Status  []int32
		Domains []int32
		Search  string
	}
}

templ List(data ListData) {
	if len(data.Mailboxes) == 0 {
		@EmptyState()
	} else {
		<div id="mailboxes-list" class="container mx-auto px-4 py-8">
			<div class="mb-8">
				<h1 class="text-2xl font-bold mb-4">Mailboxes</h1>
				<div id="mailboxes-list-page" class="bg-white shadow sm:rounded-lg">
					<div class="px-4 py-5 sm:p-6">
						<div class="sm:flex sm:items-center">
							<div class="sm:flex-auto">
								<p class="mt-2 text-sm text-gray-700">A list of all mailboxes in your account.</p>
							</div>
							<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
								<button
									type="button"
									class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
									hx-get="/mailboxes/new"
									hx-target="#modal"
								>
									Add mailbox
								</button>
							</div>
						</div>
						<div id="mailboxes-list" class="mt-8">
							@TableWithPagination(data)
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ TableWithPagination(data ListData) {
	<div>
		@Table(data)
		@Pagination(data)
	</div>
}

templ Table(data ListData) {
	<table class="min-w-full divide-y divide-gray-300">
		<thead class="bg-gray-50">
			<tr>
				<th scope="col" class="w-[35%] px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Address</th>
				<th scope="col" class="w-[25%] px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Domain</th>
				<th scope="col" class="w-[15%] px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Status</th>
				<th scope="col" class="w-[15%] relative py-3.5 pl-3 pr-4 sm:pr-6">
					<span class="sr-only">Actions</span>
				</th>
			</tr>
		</thead>
		<tbody class="divide-y divide-gray-200 bg-white">
			for _, mailbox := range data.Mailboxes {
				@TableRow(mailbox)
			}
		</tbody>
	</table>
}

templ TableRow(mailbox db.GetMailboxesWithFiltersRow) {
	<tr>
		<td class="w-[35%] whitespace-nowrap px-3 py-4 text-sm text-gray-500">
			<a href={ templ.SafeURL(fmt.Sprintf("/mailboxes/%d", mailbox.ID)) } class="text-indigo-600 hover:text-indigo-900">
				{ mailbox.Address }
			</a>
		</td>
		<td class="w-[25%] whitespace-nowrap px-3 py-4 text-sm text-gray-500">{ mailbox.DomainName.String }</td>
		<td class="w-[15%] whitespace-nowrap px-3 py-4 text-sm">
			@common.StatusBadge(mailbox.Status)
		</td>
		<td class="w-[15%] relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
			<div class="flex justify-end space-x-4">
				<button
					class="text-indigo-600 hover:text-indigo-900"
					hx-get={ fmt.Sprintf("/mailboxes/%d/edit", mailbox.ID) }
					hx-target="#modal"
				>
					@common.EditIcon()
				</button>
				<button
					class="text-red-600 hover:text-red-900"
					hx-delete={ fmt.Sprintf("/mailboxes/%d", mailbox.ID) }
					hx-confirm="Are you sure you want to delete this mailbox?"
					hx-target="closest tr"
					hx-swap="outerHTML"
				>
					@common.DeleteIcon()
				</button>
			</div>
		</td>
	</tr>
}
