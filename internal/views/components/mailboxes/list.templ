package mailboxes

import (
	"fmt"
	db "github.com/danilshap/domains-generator/internal/db/sqlc"
)

type ListData struct {
	Mailboxes   []db.GetMailboxesWithFiltersRow
	CurrentPage int32
	TotalPages  int32
	PageSize    int32
}

templ List(data ListData) {
	<div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
		<div class="px-6 py-5 border-b border-gray-100">
			<div class="flex items-center justify-between">
				<div>
					<h2 class="text-xl font-semibold text-gray-900">Mailboxes</h2>
					<p class="mt-1 text-sm text-gray-500">Manage your email accounts and settings</p>
				</div>
				<button
					type="button"
					class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 rounded-lg transition-colors shadow-sm"
					hx-get="/mailboxes/new"
					hx-target="#modal"
				>
					<i class="fa-solid fa-plus mr-2"></i>
					Add Mailbox
				</button>
			</div>
		</div>
		if len(data.Mailboxes) == 0 {
			<div class="px-6 py-12">
				<div class="text-center">
					<div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-indigo-50 mb-4">
						<i class="fa-solid fa-envelope text-indigo-600 text-2xl"></i>
					</div>
					<h3 class="text-base font-semibold text-gray-900 mb-1">No mailboxes yet</h3>
					<p class="text-sm text-gray-500 mb-4">Get started by adding your first mailbox.</p>
					<button
						type="button"
						class="inline-flex items-center px-4 py-2 text-sm font-medium text-indigo-600 bg-indigo-50 hover:bg-indigo-100 rounded-lg transition-colors"
						hx-get="/mailboxes/new"
						hx-target="#modal"
					>
						<i class="fa-solid fa-plus mr-2"></i>
						Add Your First Mailbox
					</button>
				</div>
			</div>
		} else {
			<div class="overflow-x-auto">
				<table class="w-full">
					<thead>
						<tr class="bg-gray-50">
							<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Email</th>
							<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Domain</th>
							<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Password</th>
							<th class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider px-6 py-3">Status</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray-100">
						for _, mailbox := range data.Mailboxes {
							<tr class="group hover:bg-gray-50 transition-colors">
								<td class="whitespace-nowrap px-6 py-4">
									<div class="flex items-center">
										<div class="w-8 h-8 rounded-lg bg-indigo-50 flex items-center justify-center mr-3 group-hover:bg-indigo-100 transition-colors">
											<i class="fa-solid fa-envelope text-indigo-600"></i>
										</div>
										<div>
											<a
												href={ templ.SafeURL(fmt.Sprintf("/mailboxes/%d", mailbox.ID)) }
												class="text-sm font-medium text-gray-900 hover:text-indigo-600 transition-colors"
											>
												{ mailbox.Address }
											</a>
											<div class="text-xs text-gray-500">Added on { mailbox.CreatedAt.Time.Format("Jan 02, 2006") }</div>
										</div>
									</div>
								</td>
								<td class="whitespace-nowrap px-6 py-4">
									<div class="inline-flex items-center px-2.5 py-1 rounded-md bg-gray-50 border border-gray-200">
										<span class="text-sm text-gray-700">{ mailbox.DomainName.String }</span>
									</div>
								</td>
								<td class="whitespace-nowrap px-6 py-4">
									<div class="inline-flex items-center">
										<span class="text-sm text-gray-600">{ mailbox.Password }</span>
									</div>
								</td>
								<td class="whitespace-nowrap px-6 py-4">
									<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
										Active
									</span>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
			if data.TotalPages > 1 {
				<div class="px-6 py-4 border-t border-gray-100">
					<div class="flex items-center justify-between">
						<div class="text-sm text-gray-500">
							Page { fmt.Sprint(data.CurrentPage) } of { fmt.Sprint(data.TotalPages) }
						</div>
						<div class="flex items-center space-x-2">
							if data.CurrentPage > 1 {
								<button
									type="button"
									class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 rounded-lg border border-gray-200 transition-colors"
									hx-get={ fmt.Sprintf("/mailboxes?page=%d", data.CurrentPage-1) }
									hx-target="#mailboxes-list"
								>
									<i class="fa-solid fa-chevron-left mr-1 text-xs"></i>
									Previous
								</button>
							}
							if data.CurrentPage < data.TotalPages {
								<button
									type="button"
									class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 rounded-lg border border-gray-200 transition-colors"
									hx-get={ fmt.Sprintf("/mailboxes?page=%d", data.CurrentPage+1) }
									hx-target="#mailboxes-list"
								>
									Next
									<i class="fa-solid fa-chevron-right ml-1 text-xs"></i>
								</button>
							}
						</div>
					</div>
				</div>
			}
		}
	</div>
}
