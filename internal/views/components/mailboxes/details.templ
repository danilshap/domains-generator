package mailboxes

import (
	"fmt"
	db "github.com/danilshap/domains-generator/internal/db/sqlc"
	"github.com/danilshap/domains-generator/internal/views/components/common"
)

type DetailsData struct {
	Mailbox db.Mailbox
	Domain  db.GetDomainByIDRow
}

templ Details(data DetailsData) {
	<div class="space-y-6">
		// Header section
		<div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
			<div class="px-6 py-5 border-b border-gray-100">
				<div class="flex items-center justify-between">
					<div class="flex items-center space-x-4">
						<div class="w-12 h-12 rounded-xl bg-indigo-50 flex items-center justify-center">
							<i class="fa-solid fa-envelope text-indigo-600 text-2xl"></i>
						</div>
						<div>
							<h1 class="text-2xl font-semibold text-gray-900">{ data.Mailbox.Address }</h1>
							<p class="text-sm text-gray-500">Added on { data.Mailbox.CreatedAt.Time.Format("January 2, 2006") }</p>
						</div>
					</div>
					<div class="flex items-center -m-1.5">
						<div class="p-1.5">
							<button
								type="button"
								class="inline-flex items-center justify-center w-8 h-8 text-gray-500 hover:text-indigo-600 hover:bg-indigo-50 rounded-lg transition-colors"
								hx-get={ fmt.Sprintf("/mailboxes/%d/edit", data.Mailbox.ID) }
								hx-target="#modal"
								title="Edit Mailbox"
							>
								<i class="fa-solid fa-pencil text-[15px]"></i>
							</button>
						</div>
						<div class="p-1.5">
							<button
								type="button"
								class={
									templ.KV("inline-flex items-center justify-center w-8 h-8 text-gray-500 rounded-lg transition-colors", true),
									templ.KV("hover:text-red-600 hover:bg-red-50", data.Mailbox.Status == 1),
									templ.KV("hover:text-green-600 hover:bg-green-50", data.Mailbox.Status == 2),
								}
								hx-put={ fmt.Sprintf("/mailboxes/%d/status", data.Mailbox.ID) }
								hx-vals={ fmt.Sprintf(`{"status": %d}`, map[int32]int32{1: 2, 2: 1}[data.Mailbox.Status]) }
								if data.Mailbox.Status == 1 {
									hx-confirm="Are you sure you want to deactivate this mailbox?"
								}
								title={ map[int32]string{1: "Deactivate Mailbox", 2: "Activate Mailbox"}[data.Mailbox.Status] }
							>
								if data.Mailbox.Status == 1 {
									<i class="fa-solid fa-ban text-[15px]"></i>
								} else {
									<i class="fa-solid fa-power-off text-[15px]"></i>
								}
							</button>
						</div>
						<div class="p-1.5">
							<button
								type="button"
								class="inline-flex items-center justify-center w-8 h-8 text-gray-500 hover:text-red-600 hover:bg-red-50 rounded-lg transition-colors"
								hx-delete={ fmt.Sprintf("/mailboxes/%d", data.Mailbox.ID) }
								hx-confirm="Are you sure you want to delete this mailbox?"
								hx-target="body"
								hx-push-url="/mailboxes"
								title="Delete Mailbox"
							>
								<i class="fa-solid fa-trash text-[15px]"></i>
							</button>
						</div>
					</div>
				</div>
			</div>
			// Mailbox info section
			<div class="px-6 py-5 grid grid-cols-3 gap-6">
				<div>
					<div class="text-sm font-medium text-gray-500 mb-1">Domain</div>
					<div class="inline-flex items-center">
						<div class="w-6 h-6 rounded-md bg-indigo-50 flex items-center justify-center mr-2">
							<i class="fa-solid fa-globe text-indigo-600 text-xs"></i>
						</div>
						<a
							href={ templ.SafeURL(fmt.Sprintf("/domains/%d", data.Domain.ID)) }
							class="text-sm text-gray-900 hover:text-indigo-600 transition-colors"
						>
							{ data.Domain.Name }
						</a>
					</div>
				</div>
				<div>
					<div class="text-sm font-medium text-gray-500 mb-1">Status</div>
					@common.MailboxStatusBadge(data.Mailbox.Status)
				</div>
			</div>
		</div>
	</div>
}
