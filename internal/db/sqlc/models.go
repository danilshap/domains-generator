// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/sqlc-dev/pqtype"
)

type NotificationType string

const (
	NotificationTypeInfo    NotificationType = "info"
	NotificationTypeSuccess NotificationType = "success"
	NotificationTypeWarning NotificationType = "warning"
	NotificationTypeError   NotificationType = "error"
)

func (e *NotificationType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = NotificationType(s)
	case string:
		*e = NotificationType(s)
	default:
		return fmt.Errorf("unsupported scan type for NotificationType: %T", src)
	}
	return nil
}

type NullNotificationType struct {
	NotificationType NotificationType `json:"notification_type"`
	Valid            bool             `json:"valid"` // Valid is true if NotificationType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullNotificationType) Scan(value interface{}) error {
	if value == nil {
		ns.NotificationType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.NotificationType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullNotificationType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.NotificationType), nil
}

type Domain struct {
	ID        int32                 `json:"id"`
	Name      string                `json:"name"`
	Provider  string                `json:"provider"`
	Status    int32                 `json:"status"`
	CreatedAt sql.NullTime          `json:"created_at"`
	ExpiresAt sql.NullTime          `json:"expires_at"`
	IsDeleted sql.NullBool          `json:"is_deleted"`
	Settings  pqtype.NullRawMessage `json:"settings"`
	UserID    int32                 `json:"user_id"`
}

type Mailbox struct {
	ID                 int32                 `json:"id"`
	Address            string                `json:"address"`
	Password           string                `json:"password"`
	DomainID           int32                 `json:"domain_id"`
	CreatedAt          sql.NullTime          `json:"created_at"`
	Status             int32                 `json:"status"`
	IsDeleted          sql.NullBool          `json:"is_deleted"`
	Settings           pqtype.NullRawMessage `json:"settings"`
	LastLogin          sql.NullTime          `json:"last_login"`
	LastPasswordChange sql.NullTime          `json:"last_password_change"`
	PasswordExpiresAt  sql.NullTime          `json:"password_expires_at"`
	UserID             int32                 `json:"user_id"`
}

type Notification struct {
	ID        int64            `json:"id"`
	UserID    int32            `json:"user_id"`
	Title     string           `json:"title"`
	Message   string           `json:"message"`
	Type      NotificationType `json:"type"`
	ReadAt    sql.NullTime     `json:"read_at"`
	CreatedAt time.Time        `json:"created_at"`
}

type User struct {
	ID             int32          `json:"id"`
	Username       string         `json:"username"`
	Email          string         `json:"email"`
	HashedPassword string         `json:"hashed_password"`
	FullName       sql.NullString `json:"full_name"`
	Role           string         `json:"role"`
	IsActive       bool           `json:"is_active"`
	CreatedAt      time.Time      `json:"created_at"`
	UpdatedAt      time.Time      `json:"updated_at"`
}
